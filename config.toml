base_url = "https://tduyng.github.io"
theme = "tabi"

title = "~/Z"
description = "Z is software developer. Typescript and Rust enthusiast"
author = "Z"

generate_feed = true
compile_sass = true
minify_html = false

taxonomies = [{ name = "tags", feed = true }]

build_search_index = true
default_language = "en"

[search]
include_title = true
include_description = true
include_path = true
include_content = true
# At which character to truncate the content to. Useful if you have a lot of pages and the index would
# become too big to load on the site. Defaults to not being set.
# truncate_content_length = 100
# Wether to produce the search index as a javascript file or as a JSON file.
# Accepted value "elasticlunr_javascript" or "elasticlunr_json".
index_format = "elasticlunr_json"

[markdown]
highlight_code = true
highlight_theme = "css"
smart_punctuation = true
render_emoji = true

[link_checker]
skip_anchor_prefixes = ["https://github.com/"]

[extra]
# Enable JavaScript theme toggler to allow users to switch between dark/light mode.
# If disabled, your site will only use the theme specified in the `default_theme` variable.
theme_switcher = true

# This setting determines the default theme on load ("light" or "dark").
# To default to the user's OS-level theme, leave it empty or unset.
default_theme = "dark"

# Choose the colourscheme (skin) for the theme. Default is "teal".
# Skin available: blue, lavender, mint, red, sakura, teal, monochrome, lowcontrast_orange, lowcontrast_peach, lowcontrast_pink, indigo_ingot, evangelion
# See them live and learn how to create your own: https://welpo.github.io/tabi/blog/customise-tabi/#skins
# WARNING! "lowcontrast" skins, while aesthetically pleasing, may not provide optimal
# contrast (in light theme) for readability and might not be suitable for all users.
# Furthermore, low contrasting elements will affect your Google Lighthouse rating.
# All other skins have optimal contrast.
skin = ""

# Set browser theme colour. Can be a single colour or [light, dark].
# Note: Bright colors may be ignored in dark mode.
# More details: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name/theme-color
browser_theme_color = "#087e96"
# browser_theme_color = ["#ffffff", "#000000"]  # Example of light/dark colours.

# List additional stylesheets to load site-wide.
# These stylesheets should be located in your site's `static` directory.
# Example: stylesheets = ["extra1.css", "path/extra2.css"]
# You can load a stylesheet for a single post by adding it to the [extra] section of the post's front matter, following this same format.
stylesheets = []

# Remote repository for your Zola site.
# Used for `show_remote_changes` and `show_remote_source` (see below).
# Supports GitHub, GitLab, Gitea, and Codeberg.
remote_repository_url = "https://github.com/tduyng/tduyng.github.io"
# Set this to "auto" to try and auto-detect the platform based on the repository URL.
# Accepted values are "github", "gitlab", "gitea", and "codeberg".
remote_repository_git_platform = "auto" # Defaults to "auto".
# Branch in the repo hosting the Zola site.
remote_repository_branch = "main" # Defaults to "main".
# Show a link to the commit history of updated posts, right next to the last updated date.
# Can be set at page or section levels, following the hierarchy: page > section > config. See: https://github.com/welpo/tabi/pull/128
show_remote_changes = true # Defaults to true.
# Show a link to the repository of the site, right next to the "Powered by Zola & tabi" text.
show_remote_source = false # Defaults to true.

# Add a "copy" button to codeblocks (loads ~700 bytes of JavaScript).
# Can be set at page or section levels, following the hierarchy: page > section > config. See: https://github.com/welpo/tabi/pull/128
copy_button = true

# Show the reading time of a page.
# Can be set at page or section levels, following the hierarchy: page > section > config. See: https://github.com/welpo/tabi/pull/128
show_reading_time = true

# Adds backlinks to footnotes (loads ~500 bytes of JavaScripts).
# Can be set at page or section levels, following the hierarchy: page > section > config. See: https://github.com/welpo/tabi/pull/128
footnote_backlinks = false

# Enable KaTeX for all posts.
# Can be set at page or section levels, following the hierarchy: page > section > config. See: https://github.com/welpo/tabi/pull/128
katex = false

# Quick navigation buttons.
# Adds "go up" and "go to comments" buttons on the bottom right (hidden for mobile).
# Can be set at page or section levels, following the hierarchy: page > section > config. See: https://github.com/welpo/tabi/pull/128
quick_navigation_buttons = true

# Date format used when listing posts (main page, /blog section, tag posts list…)
# Default is "6th July 2049" in English and "%d %B %Y" in other languages.
long_date_format = "%d %B %Y"

# Date format used for blog posts.
# Default is "6th July 2049" in English and "%-d %B %Y" in other languages.
short_date_format = ""

# Custom separator used in title tag and posts metadata (between date, time to read, and tags).
separator = "•"

# Use a shorter layout for All tags listing.
# Default: tag_name – n post[s]
# Compact: tag_name^n (superscript number)
compact_tags = false

# Invert the order of the site title and page title in the browser tab.
# Example: true => "Blog • ~/tabi", false => "~/tabi • Blog"
invert_title_order = true

# Full path after the base URL required. So if you were to place it in "static" it would be "/favicon.png"
favicon = "img/logo.svg"

favicon_emoji = "Z"

# Add an emoji here to use it as favicon.
# Compatibility: https://caniuse.com/link-icon-svg
# Path to the fallback image for social media cards (the image shown when sharing a link on WhatsApp, LinkedIn…).
# Read more: https://nikitahl.com/html-meta-tags-for-social-media
# Using an image representative of each post is recommended. You can do so by setting this variable in the [extra] section of a post's front matter.
# If a post doesn't have a social media card, the site's default, below, will be used.
social_media_card = "img/logo.png"

menu = [
    { name = "blog", url = "blog/" },
    { name = "archive", url = "archive/" },
    { name = "projects", url = "projects/" },
    { name = "about", url = "about/" },
]

# The RSS icon will be shown if (1) it's enabled and (2) the following variable is set to true.
feed_icon = true

# Email address for footer's social section.
# Protect against spambots:
# 1. Use base64 for email (convert at https://www.base64encode.org/ or `printf 'your@email.com' | base64`).
# 2. Or, set 'encode_plaintext_email' to true for auto-encoding (only protects on site, not in public repos).
email = "dGR1eW5nLmRldkBnbWFpbC5jb20K"
# Decoding requires ~400 bytes of JavaScript. If JS is disabled, the email won't be displayed.
encode_plaintext_email = true # Setting is ignored if email is already encoded.

# The icons available can be found in "social_icons" in the "static" folder
socials = [
    { name = "github", url = "https://github.com/tduyng/", icon = "github" },
    { name = "linkedin", url = "https://www.linkedin.com/in/tienduy-nguyen/", icon = "linkedin" },
    { name = "x", url = "https://twitter.com/tduyng", icon = "twitter" },
]

# Extra menu to show on the footer, below socials section.
# footer_menu = [
#     { url = "sitemap.xml", name = "sitemap", trailing_slash = false },
# ]

# Custom security headers. What urls should your website be able to connect to?
# You need to specify the CSP and the URLs associated with the directive.
# Useful if you want to load remote content safely (embed YouTube videos, which needs frame-src, for example).
# Default directive is self.
# Default config, allows for https remote images and embedding YouTube and Vimeo content.
# This configuration (along with the right webserver settings) gets an A+ in Mozilla's Observatory: https://observatory.mozilla.org
allowed_domains = [
    { directive = "font-src", domains = [
        "'self'",
        "data:",
    ] },
    { directive = "img-src", domains = [
        "'self'",
        "https://*",
        "data:",
    ] },
    { directive = "media-src", domains = [
        "'self'",
        "https://cdn.jsdelivr.net/",
    ] },
    { directive = "script-src", domains = [
        "'self'",
    ] },
    { directive = "style-src", domains = [
        "'self'",
    ] },
    { directive = "frame-src", domains = [
        "player.vimeo.com",
        "https://www.youtube-nocookie.com",
    ] },
]

# Enable the CSP directives configured (or default).
# Can be set at page or section levels, following the hierarchy: page > section > config. See: https://welpo.github.io/tabi/blog/mastering-tabi-settings/#settings-hierarchy
enable_csp = true

# Custom subset of characters for the header.
# If set to true, the `static/custom_subset.css` file will be loaded first.
# This avoids a flashing text issue in Firefox.
# Please see https://welpo.github.io/tabi/blog/custom-font-subset/ to learn how to create this file.
custom_subset = true

[extra.analytics]
# Specify which analytics service you want to use.
# Supported options: ["goatcounter", "umami", "plausible"]
# service = "goatcounter"

# Unique identifier for tracking.
# For GoatCounter, this is the code you choose during signup.
# For Umami, this is the website ID.
# For Plausible, this is the domain name (e.g. "example.com").
# Note: Leave this field empty if you're self-hosting.
# id = "yourID"

# Optional: Specify the URL for self-hosted analytics instances.
# For GoatCounter: Base URL like "https://stats.example.com"
# For Umami: Base URL like "https://umami.example.com"
# For Plausible: Base URL like "https://plausible.example.com"
# Leave this field empty if you're using the service's default hosting.
# self_hosted_url = "https://"

# Isso support for comments. https://isso-comments.de/
# You need to self-host the backend first: https://blog.phusion.nl/2018/08/16/isso-simple-self-hosted-commenting-system/
# More info on some settings: https://isso-comments.de/docs/reference/client-config/
# [extra.isso]
# enabled_for_all_posts = true                        # Enables Isso on all posts. It can be enabled on individual posts by setting `isso = true` in the [extra] section of a post's front matter.
# automatic_loading = true                            # If set to false, a "Load comments" button will be shown.
# endpoint_url = "https://tduyng.github.io/comments/" # Accepts relative paths like "/comments/" or "/isso/", as well as full urls like "https://example.com/comments/". Include the trailing slash.
# page_id_is_slug = true                              # If true, it will use the relative path for the default language as id; this is the only way to share comments between languages. If false, it will use the entire url as id.
# lang = ""                                           # Leave blank to match the page's language.
# max_comments_top = "inf"                            # Number of top level comments to show by default. If some comments are not shown, an “X Hidden” link is shown.
# max_comments_nested = "5"                           # Number of nested comments to show by default. If some comments are not shown, an “X Hidden” link is shown.
# avatar = false
# voting = true
# page_author_hashes = " 91c8fbce5e09"                # hash (or list of hashes) of the author.
# lazy_loading = true                                 # Loads when the comments are in the viewport (using the Intersection Observer API).
